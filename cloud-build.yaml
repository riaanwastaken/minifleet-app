options:
  logging: CLOUD_LOGGING_ONLY  # or NONE if you don't want to store logs
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET

steps:
  - id: 'download-cached-npm-dependencies'
    name: gcr.io/cloud-builders/gsutil
    dir: 'minifleet-web-app'
    entrypoint: bash
    args:
      - "-c"
      - |
        gsutil cp gs://npm-cache-dependencies-${_ENV}/app-web/npm-dependencies.tgz npm-dependencies.tgz || exit 0
        tar -zxf npm-dependencies.tgz --directory / || exit 0
  
  - name: 'node:21.7'
    entrypoint: 'npm'
    args:  [ 'install', '--force' ]
    dir: 'minifleet-web-app'

  - id: 'build-front'
    name: 'node:21.7'
    entrypoint: 'npm'
    args: [ 'run', 'build', '--', '${_ENVIRONMENT}', '--base-href=/']
    dir: 'minifleet-web-app'

  - id: 'debug-build-front'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Listing contents of dist directory after build:"
        ls -l /workspace/minifleet-web-app/dist

  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/minifleet-web-app:$SHORT_SHA", "-t", "gcr.io/$PROJECT_ID/minifleet-web-app:latest", "."]
    dir: 'minifleet-web-app'

  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/minifleet-web-app:latest"]

  - name: "gcr.io/cloud-builders/gke-deploy"
    args:
      - run
      - --filename=./minifleet-web-app/${_K8S_DEPLOYMENT_FILE}
      - --image=gcr.io/$PROJECT_ID/minifleet-web-app:latest
      - --location=europe-west2-a
      - --cluster=cluster-1
      
  - id: 'upload-cached-npm-dependencies'
    waitFor: ['build-front']
    name: gcr.io/cloud-builders/gsutil
    entrypoint: bash
    dir: 'minifleet-web-app'
    args:
    - '-c'
    - |
      if [ -d "./node_modules" ]; then
        tar -zcf npm-dependencies.tgz ./node_modules;
        gsutil cp npm-dependencies.tgz gs://npm-cache-dependencies-mini-${_ENV}/app-web/npm-dependencies.tgz;
      else
        echo "node_modules directory does not exist";
        exit 1;
      fi

images: ["gcr.io/$PROJECT_ID/minifleet-web-app:$SHORT_SHA"]
timeout: 2000s
serviceAccount: projects/extreme-torch-424713-g5/serviceAccounts/cloud-build-admin@extreme-torch-424713-g5.iam.gserviceaccount.com